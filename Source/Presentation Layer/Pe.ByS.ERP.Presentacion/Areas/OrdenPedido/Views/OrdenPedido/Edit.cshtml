@{
    Layout = "~/Views/Shared/_LayoutI.cshtml";
}
@model Pe.ByS.ERP.Application.DTO.OrdenPedidoDto

<div class="grupocontenido2 scrollTotal">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Número Pedido:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.TextBoxFor(model => model.NumeroPedido, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Sucursal:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownListFor(model => model.SucursalId, new SelectList(Model.SucursalList, "Key", "Value", Model.SucursalId), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Solicitante:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownListFor(model => model.SolicitanteId, new SelectList(Model.SolicitanteList, "Key", "Value", Model.SolicitanteId), new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Fecha Pedido:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.FechaPedido, new { @class = "form-control"})
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Fecha Entrega:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.FechaEntrega, new { @class = "form-control" })
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Observación:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.TextAreaFor(model => model.Glosa, new {@class = "form-control"})
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Estado:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownListFor(model => model.Estado, new SelectList(Model.EstadoList, "Key", "Value", Model.Estado), new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="padding-bottom: 10px;"></div>
    </div>
</div>
<div>
    <table style="width: 100%" id="tablaDetalle"></table>
    <div style="width: 100%" id="barraDetalle"></div>
</div>
<div class="row" style="padding-bottom: 10px;"></div>
<div class="box-footer">
    <div class="pull-right">
        <button type="button" class="btn btn-info" id="btnGuardarCerrar">
            <i class="fa fa-floppy-o"></i>
            Guardar
        </button>
        &nbsp; &nbsp; &nbsp;
        <button type="button" class="btn btn-danger" id="btnCancelar">
            <i class="fa fa-remove"></i>
            Cancelar
        </button>
    </div>
</div>
<script type='text/javascript'>
    var grdDetalle = 'tablaDetalle';
    var dialogDelete = 'dialog-DetalleEliminar';

    $(document).ready(function () {
        ListarActaDetalle();
    });

    $("#FechaEntrega, #FechaPedido").datepicker({
        changeYear: true,
        changeMonth: true,
        showButtonPanel: true
    });

    $("#btnGuardarCerrar").click(function (e) {
        e.preventDefault();
        GuardarCerrar();
    });

    $("#btnCancelar").click(function () {
        window.location.href = '@Url.Action("Index", "OrdenPedido", new { Area = "OrdenPedido" })';
    });

    function addArticulo () {
        var opciones = {
            title: 'Articulo',
            url: '@Url.Action("ViewProducto", "OrdenPedido", new { Area = "OrdenPedido" })',
            height: 330,
            width: 450,
            buttonsConfig: {
                guardarText: 'Agregar',
                guardarIcon: 'ui-icon ui-icon-check',
                GuardarHandlerFunction: 'AgregarProducto',
                cancelarText: 'Cancelar',
                parametroHandlers: {
                    functionOk: function (rowData) {
                        
                    }
                }
            }
        };
        SIG.CreateDialogPopUpForm(opciones);
    };

    function cargarDetallePedidos(numPedido) {
        var opciones = {
            url: '@Url.Action("GetDetallePedido", "OrdenPedido", new {area = "OrdenPedido"})',
            parametros: { numPedido: numPedido }
        };

        SIG.Ajax(opciones, function(response) {
            if (response.Success) {
                var $grilla = $("#" + grdDetalle);
                var item;
                $grilla.jqGrid('clearGridData');

                for (var i = 0; i < response.Data.length; i++) {
                    item = response.Data[i];
                    $grilla.addRowData(item.Id, {
                        Id: item.Id,
                        ProductoId: item.ProductoId,
                        ProductoNombre: item.ProductoNombre,
                        UnidadMedida: item.UnidadMedida,
                        CantidadPedida: item.Cantidad
                    });
                }
            }
        });
    }

    function ListarActaDetalle() {
        var colNames = [
            'Código', 'Articulo', 'Unidad', 'Cant. Pedida', 'Cant. Aprobada', 'Observacion'
        ];
        var colModels = [
            { name: 'ProductoId', index: 'ProductoId', align: 'center', width: 60 },
            { name: 'ProductoNombre', index: 'ProductoNombre', align: 'left', width: 150 },
            { name: 'UnidadMedida', index: 'UnidadMedida', align: 'center', width: 60 },
            { name: 'CantidadPedida', index: 'CantidadPedida', align: 'right', width: 65 },
            { name: 'CantidadAprobada', index: 'CantidadAprobada', align: 'right', width: 65 },
            { name: 'Observacion', index: 'Observacion', align: 'left', width: 200 }
        ];

        var opciones = {
            gridLocal: true,
            nuevo: true,
            editar: false,
            eliminar: true,
            search: false,
            refresh: false,
            nuevoCaption: 'Agregar',
            editarCaption: 'Editar',
            eliminarCaption: 'Eliminar',
            NuevoCommand: addArticulo,
            dialogDelete: dialogDelete,
            mensaje: 'Seleccione un registro',
            sinRegistro: 'Sin registro',
            alertTitle: 'Alerta',
            caption: 'Detalle',
            grilla: grdDetalle,
            pager: 'barraDetalle',
            //identificador: 'hfIdentificadorDetalle',
            height: 210,
            width: 'auto',
            id: 'id',
            colsNames: colNames,
            colsModel: colModels,
            sortName: 'Id',
            pgbuttons: false,
            rowNumbers: [],
            viewrecords: false,
            pginput: false
        };

        SIG.GrillaUpgrade(opciones);
    }

   function GuardarCerrar() {
        var model = {
            SucursalId: $('#SucursalId').val(),
            AlmacenId: $('#AlmacenId').val(),
            VerificadorId: $('#VerificadorId').val(),
            Fecha: $('#Fecha').val(),
            OrdenPedidoId: $('#OrdenPedidoId').val(),
            NumeroGuia: $('#NumeroGuia').val(),
            Glosa: $('#NumeroGuia').val(),
            FechaGuia: $('#txtFechaGuia').val(),
            DetalleList: $("#" + grdDetalle).jqGrid('getGridParam', 'data')
        };

        var msj = "";
        if (model.SucursalId === "")
            msj += "- Seleccione una sucursal<br />";
        if (model.AlmacenId == null || model.AlmacenId === "")
            msj += "- Seleccione un almacén<br />";
        if (model.VerificadorId === "")
            msj += "- Seleccione un verificador<br />";
        if ($("#NumeroPedido").val() === "")
            msj += "- Seleccione o ingrese el número de pedido<br />";
        if (model.NumeroGuia === "")
            msj += "- Ingrese un número de guia<br />";
        if (model.FechaGuia === "")
            msj += "- Ingrese una fecha de guia<br />";

        var item;
        for (var i = 0; i < model.DetalleList.length; i++) {
            item = model.DetalleList[i];
            if (!item.CantidadRecepcionada || item.Saldo !== 0) {
                msj += "- Ingrese los lotes y cant. rec del detalle";
                break;
            }
        }

        if (msj !== "") {
            SIG.Alert('Alerta', msj, null);
            return;
        }

        var opciones = {
            url: '@Url.Action("GenerarActa", "ActaRecepcion", new {area = "ActaRecepcion"})',
            parametros: model
        };

        SIG.Ajax(opciones, function(response) {
            if (response.Success) {
                SIG.Alert('Alerta', 'Acta registrada correctamente', null);
                @*window.location.href = '@Url.Action("Edit", "ActaRecepcion", new { Area = "ActaRecepcion" })';*@
            } else {
                SIG.Alert('Alerta', response.Message, null);
            }
        });
    }
</script>