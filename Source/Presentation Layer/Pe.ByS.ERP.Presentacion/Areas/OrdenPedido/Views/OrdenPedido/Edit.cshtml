@{
    Layout = "~/Views/Shared/_LayoutI.cshtml";
}

@model Pe.ByS.ERP.Application.DTO.OrdenPedidoDto

<div class="grupocontenido2 scrollTotal">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12">
                <div class="text-center" style="padding-bottom: 20px;">
                    <h2>Actualizar Orden de Pedido</h2>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Número Pedido:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.TextBoxFor(model => model.NumeroPedido, new {@class = "form-control", @disabled = "disabled"})
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Sucursal:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownListFor(model => model.SucursalId, new SelectList(Model.SucursalList, "Key", "Value", Model.SucursalId), new {@class = "form-control"})
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Solicitante:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownListFor(model => model.SolicitanteId, new SelectList(Model.SolicitanteList, "Key", "Value", Model.SolicitanteId), new {@class = "form-control"})
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Fecha de Orden de Pedido:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.FechaPedido, new {@class = "form-control"})
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Fecha de Entrega de Pedido:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.FechaEntrega, new {@class = "form-control"})
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Observación:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.TextAreaFor(model => model.Glosa, new {@class = "form-control"})
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group form-group-sm">
                    <label class="control-label col-md-4 col-sm-4 col-xs-12">Estado:</label>
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.TextBoxFor(model => model.Estado, new {@class = "form-control", @disabled = "disabled"})
                        @*@Html.DropDownListFor(model => model.Estado, new SelectList(Model.EstadoList, "Key", "Value", Model.Estado), new {@class = "form-control"})*@
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="pull-right">
                    <button type="button" class="btn btn-success" id="btnAgregar">
                        <i class="fa fa-plus"></i>
                        Agregar Item
                    </button>
                </div>
            </div>
        </div>
        <div class="row" style="padding-bottom: 5px;"></div>
    </div>
</div>
<div id="divContentGrid">
    <table style="width: 100%" id="tablaDetalle"></table>
    <div style="width: 100%" id="barraDetalle"></div>
</div>
<div class="row" style="padding-bottom: 10px;"></div>
<div class="box-footer">
    <div class="pull-right">
        <button type="button" class="btn btn-info" id="btnGuardarCerrar">
            <i class="fa fa-floppy-o"></i>
            Guardar
        </button>
        &nbsp; &nbsp; &nbsp;
        <button type="button" class="btn btn-danger" id="btnCancelar">
            <i class="fa fa-remove"></i>
            Cancelar
        </button>
    </div>
</div>

<script type='text/javascript'>
    var grdDetalle = 'tablaDetalle';

    $(document).ready(function () {
        ListarActaDetalle();
    });

    $("#FechaPedido").datepicker({
        changeYear: true,
        changeMonth: true,
        showButtonPanel: true
    });

    $("#FechaEntrega").datepicker({
        changeYear: true,
        changeMonth: true,
        showButtonPanel: true,
        minDate: $("#FechaPedido").val()
    });


    $("#btnGuardarCerrar").click(function (e) {
        e.preventDefault();
        GuardarCerrar();
    });

    $("#btnCancelar").click(function () {
        window.location.href = '@Url.Action("Index", "OrdenPedido", new { Area = "OrdenPedido" })';
    });

    $("#btnAgregar").click(function () {
        var opciones = {
            title: 'Articulo',
            url: '@Url.Action("ViewProducto", "OrdenPedido", new { Area = "OrdenPedido" })',
            height: 350,
            width: 500,
            buttonsConfig: {
                guardarText: 'Agregar',
                guardarIcon: 'ui-icon ui-icon-check',
                GuardarHandlerFunction: 'AgregarProducto',
                cancelarText: 'Cancelar',
                parametroHandlers: {
                    functionOk: function (rowData) {
                        $("#" + grdDetalle).addRowData(rowData.ProductoId, rowData);
                    },
                    grillaId: grdDetalle
                }
            }
        };
        SIG.CreateDialogPopUpForm(opciones);
    });

    function ListarActaDetalle() {
        var colNames = [
            'Código', 'Articulo', 'Unidad', 'Cant. Pedida', 'Observacion', ''
        ];
        var colModels = [
            { name: 'ProductoId', index: 'ProductoId', align: 'center', width: 60 },
            { name: 'ProductoNombre', index: 'ProductoNombre', align: 'left', width: 150 },
            { name: 'UnidadMedida', index: 'UnidadMedida', align: 'center', width: 60 },
            { name: 'Cantidad', index: 'Cantidad', align: 'right', width: 65 },
            { name: 'Observacion', index: 'Observacion', align: 'left', width: 200 },
            {
                name: 'Eliminar',
                index: 'Eliminar',
                width: 18,
                align: "center",
                sortable: false,
                search: false,
                formatter: function () {
                    return "<img src='@Url.Content("~/Content/Images/delete.png")' class='btnEliminar' title='Eliminar'/>";
                }
            }
        ];

        var opciones = {
            gridLocal: true,
            nuevo: false,
            editar: false,
            eliminar: false,
            search: false,
            refresh: false,
            nuevoCaption: 'Agregar',
            editarCaption: 'Editar',
            eliminarCaption: 'Eliminar',
            dialogDelete: 'dialog-DetalleEliminar',
            mensaje: 'Seleccione un registro',
            sinRegistro: 'Sin registro',
            alertTitle: 'Alerta',
            caption: 'Detalle',
            grilla: grdDetalle,
            pager: 'barraDetalle',
            height: 180,
            width: 'auto',
            id: 'id',
            colsNames: colNames,
            colsModel: colModels,
            sortName: 'Id',
            pgbuttons: false,
            rowNumbers: [],
            viewrecords: false,
            pginput: false
        };

        var $grilla = $("#" + grdDetalle);

        $('#divContentGrid').on("click", ".btnEliminar", function () {
            var rowKey = $grilla.getGridParam('selrow');
            $grilla.jqGrid('delRowData', rowKey);
        });

        SIG.GrillaUpgrade(opciones);
        CargarData();
    }

    function CargarData() {
        debugger;
        var datos = '@Html.Raw(Json.Encode(@Model.DetalleList))';
        if (datos !== 'null') {
            var datosJson = JSON.parse(datos);
            var $grilla = $("#" + grdDetalle);
            var item;

            for (var i = 0; i < datosJson.length; i++) {
                item = datosJson[i];
                $grilla.addRowData(item.ProductoId, item);
            }
        }
    }

    function GuardarCerrar() {
        var model = {
            FechaPedido: $('#FechaPedido').val(),
            FechaEntrega: $('#FechaEntrega').val(),
            SucursalId: $('#SucursalId').val(),
            SolicitanteId: $('#SolicitanteId').val(),
            Glosa: $('#Glosa').val(),
            DetalleList: $("#" + grdDetalle).jqGrid('getGridParam', 'data')
        };

        var msj = "";
        if (model.SucursalId === "")
            msj += "- Seleccione una sucursal.<br />";
        if (model.SolicitanteId === "")
            msj += "- Seleccione un solicitante.<br />";
        if (model.FechaPedido === "")
            msj += "- Ingrese fecha de orden de pedido.<br />";
        if (model.FechaEntrega === "")
            msj += "- Ingrese fecha de entrega de pedido.<br />";

        if (model.DetalleList.length === 0)
            msj += "- Agrege articulos al detalle.<br />";

        if (msj !== "") {
            SIG.Alert('Alerta', msj, null);
            return;
        }

        var opciones = {
            url: '@Url.Action("ArgregarPedido", "OrdenPedido", new { area = "OrdenPedido" })',
            parametros: model
        };

        SIG.Ajax(opciones, function (response) {
            if (response.Success) {
                SIG.Alert('Alerta', 'Pedido registrado correctamente.<br/>El Número Pedido generado es: ' + response.Data, redirectIndex, redirectIndex);
            } else {
                SIG.Alert('Alerta', response.Message, null);
            }
        });
    }

    function redirectIndex() {
        window.location.href = '@Url.Action("Index", "OrdenPedido", new { Area = "OrdenPedido" })';
    }
</script>