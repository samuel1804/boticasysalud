@{
    Layout = "~/Views/Shared/_LayoutI.cshtml";
}
@using Pe.ByS.ERP.CrossCutting.Common.Enums
@model List<KeyValuePair<string, string>>

<div class="form-horizontal">
    <div class="row">
        <div class="col-md-12">
            <div class="text-center" style="padding-bottom: 20px;">
                <h2>Actualizar Orden de Pedido</h2>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="form-group form-group-sm">
                <label class="control-label col-md-4 col-sm-4 col-xs-12">Estado:</label>
                <div class="col-md-8 col-sm-8 col-xs-12">
                    @Html.DropDownList("selEstado", new SelectList(Model, "Key", "Value", 0), new {@class = "form-control"})
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <div class="form-group form-group-sm">
                <label class="control-label col-md-4 col-sm-4 col-xs-12">Fecha de Entrega de Pedido:</label>
                <div class="col-md-8 col-sm-8 col-xs-12">
                    <div class="input-group">
                        @Html.TextBox("txtFechaEntrega", "", new {@class = "form-control"})
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group form-group-sm">
                <label class="control-label col-md-4 col-sm-4 col-xs-12">Número de Orden de Pedido:</label>
                <div class="col-sm-8 col-sm-8 col-xs-12">
                    @Html.TextBox("txtNumeroPedido", "", new {@class = "form-control"})
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-success" id="btnBuscar">
                <i class="fa fa-search"></i>
                Buscar
            </button>
        </div>
    </div>
    <div class="row" style="padding-bottom: 20px;"></div>
</div>

<div>
    <input id="hfIdentPedido" type="hidden"/>
    <table style="width: 100%" id="tablaPedido"></table>
    <div style="width: 100%" id="barraPedido"></div>
</div>

<div class="form-horizontal">
    <div class="row" style="padding-bottom: 20px;"></div>
    <div class="box-footer">
        <div class="col-md-offset-3 col-md-9">
            <button type="button" class="btn btn-info" id="btnAgregar">
                <i class="fa fa-plus"></i>
                Agregar
            </button>
            &nbsp; &nbsp; &nbsp;
            <button type="button" class="btn btn-info" id="btnActualizar">
                <i class="fa fa-pencil"></i>
                Actualizar
            </button>
            &nbsp; &nbsp; &nbsp;
            <button type="button" class="btn btn-danger" id="btnEliminar">
                <i class="fa fa-remove"></i>
                Eliminar
            </button>
        </div>
    </div>
</div>

<script type='text/javascript' id="ListarProducto">
    var grdPedido = 'tablaPedido';

    $(document).ready(function() {
        ListarActa();
    });

    $("#txtFechaEntrega").datepicker({
        changeYear: true,
        changeMonth: true,
        showButtonPanel: true
    });

    $("#btnBuscar").click(function() {
        var rules = [];
        var pedido = $("#txtNumeroPedido").val();
        if (pedido !== "")
            rules.push({ field: "NumeroPedido", op: "cn", data: pedido });

        var fecha = $("#txtFechaEntrega").val();
        if (fecha !== "") {
            rules.push({ field: "FechaEntrega", op: "gt", data: fecha });
            rules.push({ field: "FechaEntrega", op: "lt", data: fecha.concat(" 23:59:59") });
        }

        var filters = { groupOp: "AND", rules: rules };
        var $grid = $("#" + grdPedido);
        $grid.jqGrid('getGridParam').postData.filters = JSON.stringify(filters);
        $grid.trigger("reloadGrid");
    });

    $("#btnAgregar").click(function() {
        window.location.href = '@Url.Action("Edit", "OrdenPedido", new {Area = "OrdenPedido"})';
    });

    $("#btnActualizar").click(function() {
        var $grilla = $("#" + grdPedido);
        var rowKey = $grilla.getGridParam('selrow');

        if (rowKey != null) {
            var rowData = $grilla.getRowData(rowKey);

            if (rowData.EstadoId != '@Convert.ToInt32(EstadoPedido.Pendiente)') {
                SIG.Alert('Alerta', "No se puede eliminar el registro su estado es diferente de \"Pendiente\"");
                return;
            }

            window.location.href = '@Url.Action("ActualizarPedido", "OrdenPedido", new {Area = "OrdenPedido"})/' + rowKey;
        } else
            SIG.Alert("Alerta", "Seleccione un registro", null);
    });

    $("#btnEliminar").click(function() {
        var $grilla = $("#" + grdPedido);
        var rowKey = $grilla.getGridParam('selrow');

        if (rowKey != null) {
            var rowData = $grilla.getRowData(rowKey);

            if (rowData.EstadoId != '@Convert.ToInt32(EstadoPedido.Pendiente)') {
                SIG.Alert('Alerta', "No se puede eliminar el registro su estado es diferente de \"Pendiente\"");
                return;
            }

            var parametrosConfirm = {
                dialogText: "Está seguro que desea eliminar el registro?",
                OkHandlerFunction: function(key) {
                    var opciones = {
                        url: '@Url.Action("EliminarPedido", "OrdenPedido", new {area = "OrdenPedido"})',
                        parametros: { id: key }
                    };

                    SIG.Ajax(opciones, function(response) {
                        if (response.Success) {
                            SIG.Alert('Alerta', 'Registro eliminado correctamente.');
                            $grilla.trigger("reloadGrid");
                        } else {
                            SIG.Alert('Alerta', response.Message, null);
                        }
                    });
                },
                dialogTitle: "Alerta",
                dialogOkText: "Aceptar",
                dialogCancelText: "Cancelar",
                parametroHandlers: rowKey
            };
            SIG.confirmUpgrade(parametrosConfirm);
        } else
            SIG.Alert("Alerta", "Seleccione un registro", null);
    });

    function ListarActa() {
        var colNames = ['ID', 'Número de Orden de Pedido', 'Fecha de Solicitud', 'Fecha de Entrega de Pedido', 'Solicitante', 'Estado', 'EstadoId'];
        var colModels = [
            { name: 'Id', index: 'Id', align: 'center', hidden: true },
            { name: 'NumeroPedido', index: 'NumeroPedido', align: 'center', width: 100, searchoptions: { sopt: ['cn', 'bw'] } },
            { name: 'FechaPedido', index: 'FechaPedido', align: 'center', width: 120 },
            { name: 'FechaEntrega', index: 'FechaEntrega', align: 'center', width: 120, searchoptions: { sopt: ['cn', 'bw'] } },
            { name: 'SolicitanteNombre', index: 'SolicitanteNombre', align: 'center', width: 120 },
            { name: 'Estado', index: 'Estado', align: 'center', width: 120, searchoptions: { sopt: ['cn', 'bw'] } },
            { name: 'EstadoId', index: 'EstadoId', align: 'center', hidden: true }
        ];

        var opciones = {
            nuevo: false,
            editar: false,
            eliminar: false,
            search: false,
            refresh: false,
            nuevoCaption: 'Agregar',
            EditarCaption: 'Actualizar',
            EliminarCaption: 'Eliminar',
            mensaje: 'Seleccione un registro',
            sinRegistro: 'Sin registro',
            alertTitle: 'Alerta',
            caption: 'Listado de Ordenes de Pedido',
            urlListar: '@Url.Action("ListarPedidos", "OrdenPedido", new {area = "OrdenPedido"})',
            grilla: grdPedido,
            pager: 'barraPedido',
            identificador: 'hfIdentPedido',
            height: 210,
            width: 'auto',
            id: 'id',
            colsNames: colNames,
            colsModel: colModels,
            sortName: 'Id',
            rules: true,
            GetRulesMethod: function() {
                var estado = $("#selEstado").val();
                if (estado !== "")
                    return [{ field: "Estado", op: "eq", data: estado }];
                return null;
            }
        };

        SIG.GrillaUpgrade(opciones);
    }

</script>